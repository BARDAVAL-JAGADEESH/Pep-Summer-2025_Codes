//using xor operation
#include<iostream>
using namespace std;
int missingnumber(int arr[],int n){
  int xor1=0;
  int xor2=0;
  for(int i=0;i<=n;i++)
  	xor1^=i;
  	for(int i=0;i<n;i++)
  	xor2^=arr[i];
  	 return xor1^xor2;
  	   
}
int main(){
	int arr[5]={3,2,5,4};
	int ans=missingnumber(arr,5);
	cout<<ans;
	
}

int missingnumber(int arr[], int n) {
  int xor1 = 0;  // To hold the XOR of all numbers from 0 to n
  int xor2 = 0;  // To hold the XOR of all elements in the array

  // XOR all numbers from 0 to n
  for (int i = 0; i <= n; i++) {
    xor1 ^= i;
  }

  // XOR all elements in the array
  for (int i = 0; i < n; i++) {
    xor2 ^= arr[i];
  }

  // XOR the results to find the missing number
  return xor1 ^ xor2;
}



//using sum
#include<iostream>
using namespace std;
int missing(int arr[],int n){
	int sum=0;
	int sumof=(n*(n+1))/2;
	for(int i=0;i<n-1;i++){
		sum+=arr[i];
		//int ans=sumof-sum;	
	}
	return sumof-sum;
}
int main(){
int arr[5]={1,2,4,5};
cout<<missing(arr,5);
	
}
